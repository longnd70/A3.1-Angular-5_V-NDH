{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { fakeMovies } from '../models/fake-movies'; //Get data asynchronously with Observable\n\nimport { of } from 'rxjs';\nlet MovieService = class MovieService {\n  constructor(messageService) {\n    this.messageService = messageService;\n  }\n\n  getMovies() {\n    this.messageService.add(`${new Date().toLocaleString()}. Get movie list`);\n    return of(fakeMovies);\n  }\n\n  getMovieFromId(id) {\n    return of(fakeMovies.find(movie => movie.id === id));\n  }\n\n};\nMovieService = __decorate([Injectable({\n  providedIn: 'root'\n})], MovieService);\nexport { MovieService };","map":{"version":3,"mappings":";AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,SAASC,UAAT,QAA2B,uBAA3B,C,CAEA;;AACA,SAAqBC,EAArB,QAA+B,MAA/B;AAMA,IAAaC,YAAY,GAAzB,MAAaA,YAAb,CAAyB;EAQvBC,YAAmBC,cAAnB,EAAiD;IAA9B;EAAmC;;EAPtDC,SAAS;IACP,KAAKD,cAAL,CAAoBE,GAApB,CAAwB,GAAI,IAAIC,IAAJ,GAAWC,cAAX,EAA2B,kBAAvD;IACA,OAAOP,EAAE,CAACD,UAAD,CAAT;EACD;;EACDS,cAAc,CAACC,EAAD,EAAW;IACvB,OAAOT,EAAE,CAACD,UAAU,CAACW,IAAX,CAAgBC,KAAK,IAAIA,KAAK,CAACF,EAAN,KAAaA,EAAtC,CAAD,CAAT;EACD;;AAPsB,CAAzB;AAAaR,YAAY,eAHxBH,UAAU,CAAC;EACVc,UAAU,EAAE;AADF,CAAD,CAGc,GAAZX,YAAY,CAAZ;SAAAA","names":["Injectable","fakeMovies","of","MovieService","constructor","messageService","getMovies","add","Date","toLocaleString","getMovieFromId","id","find","movie","providedIn"],"sourceRoot":"","sources":["D:\\Projects\\Angular5\\src\\app\\movie.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { fakeMovies } from '../models/fake-movies';\nimport { Movie } from '../models/movie';\n//Get data asynchronously with Observable\nimport { Observable, of } from 'rxjs';\nimport {MessageService} from './messages.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieService {\n  getMovies(): Observable<Movie[]> {\n    this.messageService.add(`${ new Date().toLocaleString()}. Get movie list`);\n    return of(fakeMovies);\n  }\n  getMovieFromId(id: number): Observable<Movie> {    \n    return of(fakeMovies.find(movie => movie.id === id));\n  }\n  constructor(public messageService: MessageService) { }\n}\n"]},"metadata":{},"sourceType":"module"}