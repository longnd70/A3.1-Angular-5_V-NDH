{"ast":null,"code":"// import { fakeMovies } from '../models/fake-movies';\nimport { Movie } from '../models/movie'; //Get data asynchronously with Observable\n\nimport { catchError, of, tap } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./message.service\";\nexport class MovieService {\n  constructor(http, messageService) {\n    this.http = http;\n    this.messageService = messageService;\n    this.moviesURL = 'http://localhost:3000/movies';\n  }\n\n  getMovies() {\n    // this.messageService.add(`${ new Date().toLocaleString()}. Get movie list`);\n    // return of(fakeMovies);\n    return this.http.get(this.moviesURL);\n  }\n\n  getMovieFromId(id) {\n    // return of(fakeMovies.find(movie => movie.id === id));\n    const url = `${this.moviesURL}/${id}`;\n    return this.http.get(url).pipe(tap(selectedMovie => console.log('selectedMovie=${JSON.stringify(selectedMovie)}')), catchError(error => of(new Movie())));\n  }\n\n}\n\nMovieService.ɵfac = function MovieService_Factory(t) {\n  return new (t || MovieService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.MessageService));\n};\n\nMovieService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MovieService,\n  factory: MovieService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA;AACA,SAASA,KAAT,QAAsB,iBAAtB,C,CACA;;AACA,SAASC,UAAT,EAAiCC,EAAjC,EAAqCC,GAArC,QAAgD,MAAhD;AAEA,SAAQC,UAAR,QAAqC,sBAArC;;;;AAKA,OAAM,MAAOC,YAAP,CAAmB;EACvBC,YAAoBC,IAApB,EAA4CC,cAA5C,EAA0E;IAAtD;IAAwB;IACpC,iBAAU,8BAAV;EADuE;;EAE/EC,SAAS;IACP;IACA;IACA,OAAO,KAAKF,IAAL,CAAUG,GAAV,CAAuB,KAAKC,SAA5B,CAAP;EACD;;EACDC,cAAc,CAACC,EAAD,EAAW;IACvB;IACA,MAAMC,GAAG,GAAC,GAAG,KAAKH,SAAS,IAAIE,EAAE,EAAjC;IACA,OAAO,KAAKN,IAAL,CAAUG,GAAV,CAAqBI,GAArB,EAA0BC,IAA1B,CACLZ,GAAG,CAACa,aAAa,IAAEC,OAAO,CAACC,GAAR,CAAY,gDAAZ,CAAhB,CADE,EAELjB,UAAU,CAACkB,KAAK,IAAEjB,EAAE,CAAC,IAAIF,KAAJ,EAAD,CAAV,CAFL,CAAP;EAID;;AAfsB;;;mBAAZK,cAAYe;AAAA;;;SAAZf;EAAYgB,SAAZhB,YAAY;EAAAiB,YAFX","names":["Movie","catchError","of","tap","HttpClient","MovieService","constructor","http","messageService","getMovies","get","moviesURL","getMovieFromId","id","url","pipe","selectedMovie","console","log","error","i0","factory","providedIn"],"sourceRoot":"","sources":["D:\\Projects\\Angular5\\src\\app\\movie.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n// import { fakeMovies } from '../models/fake-movies';\nimport { Movie } from '../models/movie';\n//Get data asynchronously with Observable\nimport { catchError, Observable, of, tap } from 'rxjs';\nimport {MessageService} from './message.service';\nimport {HttpClient,HttpHeaders} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieService {\n  constructor(private http:HttpClient, public messageService: MessageService) { }\n  private moviesURL='http://localhost:3000/movies';\n  getMovies(): Observable<Movie[]> {\n    // this.messageService.add(`${ new Date().toLocaleString()}. Get movie list`);\n    // return of(fakeMovies);\n    return this.http.get<Movie[]>(this.moviesURL);\n  }\n  getMovieFromId(id: number): Observable<Movie> {    \n    // return of(fakeMovies.find(movie => movie.id === id));\n    const url=`${this.moviesURL}/${id}`;\n    return this.http.get<Movie>(url).pipe(\n      tap(selectedMovie=>console.log('selectedMovie=${JSON.stringify(selectedMovie)}')),\n      catchError(error=>of(new Movie()))\n    );    \n  }\n  \n}\n"]},"metadata":{},"sourceType":"module"}